"use client";

import {
  EvidenceID,
  EvidenceLabels,
  EvidenceState,
  EvidenceStateMap,
  type Ghost,
} from "@/lib/phasmo";
import Card from "./card";
import { ReactNode, useContext } from "react";
import { EvidenceContext } from "@/contexts/evidence";
import styles from "./ghost-list.module.css";

const evidenceIcons = {
  emf: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24px"
      height="24px"
      viewBox="0 0 390 390"
    >
      <path d="M266.017,167.717c-7.502-7.498-19.699-7.498-27.2,0l-90.255,90.256c-11.101,11.1-29.162,11.1-40.268-0.002     c-11.1-11.104-11.1-29.165,0.001-40.267l90.254-90.254c7.498-7.502,7.498-19.699,0-27.203l-43.519-43.52     c-7.498-7.497-19.701-7.497-27.199,0l-90.259,90.257c-50.096,50.093-50.094,131.609,0.002,181.708     c50.098,50.096,131.611,50.098,181.708,0l90.255-90.257c7.5-7.498,7.5-19.701,0-27.199L266.017,167.717z M233.236,282.096     l-38.08-38.078l57.259-57.263l38.079,38.079L233.236,282.096z" />
      <path d="M389.664,26.142c-0.786-1.802-2.762-2.767-4.664-2.28L266.086,54.138c-1.397,0.357-2.496,1.434-2.879,2.827     c-0.382,1.388,0.014,2.873,1.031,3.892l26.297,26.318l-60.823,39.4c-1.678,1.086-2.298,3.24-1.458,5.054     c0.203,0.437,0.478,0.822,0.802,1.146c1.021,1.019,2.55,1.441,3.996,1.003l115.591-35.039c1.347-0.404,2.38-1.489,2.727-2.854     c0.344-1.364-0.054-2.808-1.042-3.805l-22.051-22.218l59.894-38.751C389.816,30.044,390.45,27.941,389.664,26.142z" />
    </svg>
  ),
  dots: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24px"
      height="24px"
      viewBox="0 0 276.167 276.167"
    >
      <path d="M33.144,2.471C15.336,2.471,0.85,16.958,0.85,34.765s14.48,32.293,32.294,32.293s32.294-14.486,32.294-32.293    S50.951,2.471,33.144,2.471z" />
      <path d="M137.663,2.471c-17.807,0-32.294,14.487-32.294,32.294s14.487,32.293,32.294,32.293c17.808,0,32.297-14.486,32.297-32.293    S155.477,2.471,137.663,2.471z" />
      <path d="M243.873,67.059c17.804,0,32.294-14.486,32.294-32.293S261.689,2.471,243.873,2.471s-32.294,14.487-32.294,32.294    S226.068,67.059,243.873,67.059z" />
      <path d="M32.3,170.539c17.807,0,32.297-14.483,32.297-32.293c0-17.811-14.49-32.297-32.297-32.297S0,120.436,0,138.246    C0,156.056,14.493,170.539,32.3,170.539z" />
      <path d="M136.819,170.539c17.804,0,32.294-14.483,32.294-32.293c0-17.811-14.478-32.297-32.294-32.297    c-17.813,0-32.294,14.486-32.294,32.297C104.525,156.056,119.012,170.539,136.819,170.539z" />
      <path d="M243.038,170.539c17.811,0,32.294-14.483,32.294-32.293c0-17.811-14.483-32.297-32.294-32.297    s-32.306,14.486-32.306,32.297C210.732,156.056,225.222,170.539,243.038,170.539z" />
      <path d="M33.039,209.108c-17.807,0-32.3,14.483-32.3,32.294c0,17.804,14.493,32.293,32.3,32.293s32.293-14.482,32.293-32.293    S50.846,209.108,33.039,209.108z" />
      <path d="M137.564,209.108c-17.808,0-32.3,14.483-32.3,32.294c0,17.804,14.487,32.293,32.3,32.293    c17.804,0,32.293-14.482,32.293-32.293S155.368,209.108,137.564,209.108z" />
      <path d="M243.771,209.108c-17.804,0-32.294,14.483-32.294,32.294c0,17.804,14.49,32.293,32.294,32.293    c17.811,0,32.294-14.482,32.294-32.293S261.575,209.108,243.771,209.108z" />
    </svg>
  ),
  freezing: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 48 48"
      width="24px"
      height="24px"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M11.1227 12.2188C11.1227 11.5457 11.6684 11 12.3415 11C13.0146 11 13.5602 11.5457 13.5602 12.2188V15.3889L16.3058 13.8037C16.8887 13.4672 17.6341 13.6669 17.9706 14.2498C18.3072 14.8327 18.1075 15.5781 17.5246 15.9147L14.779 17.4998L17.5246 19.085C18.1075 19.4215 18.3072 20.1669 17.9706 20.7498C17.6341 21.3327 16.8887 21.5325 16.3058 21.1959L13.5602 19.6108V22.7812C13.5602 23.4543 13.0146 24 12.3415 24C11.6684 24 11.1227 23.4543 11.1227 22.7812V19.6108L8.37716 21.1959C7.79424 21.5325 7.04886 21.3327 6.71231 20.7498C6.37576 20.1669 6.57549 19.4215 7.15841 19.085L9.90398 17.4998L7.15841 15.9147C6.57549 15.5781 6.37576 14.8327 6.71231 14.2498C7.04886 13.6669 7.79424 13.4672 8.37716 13.8037L11.1227 15.3889V12.2188Z"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M23 29.7786L23 27.9999L23 21.7882L23 9.38107C23 6.4224 25.2386 4.02393 28 4.02393C30.7614 4.02393 33 6.4224 33 9.38107L33 21.7882L33 28.0005L33 29.7786C34.8289 31.2447 36 33.4975 36 36.0239C36 40.4422 32.4183 44.0239 28 44.0239C23.5817 44.0239 20 40.4422 20 36.0239C20 33.4975 21.1711 31.2447 23 29.7786ZM26.9824 21.4451C28.1778 21.7552 29.5429 22.1093 31 22.0849L31 19.9999L29 19.9999C28.4477 19.9999 28 19.5522 28 18.9999C28 18.4476 28.4477 17.9999 29 17.9999L31 17.9999L31 15.9999L29 15.9999C28.4477 15.9999 28 15.5522 28 14.9999C28 14.4476 28.4477 13.9999 29 13.9999L31 13.9999L31 11.9999L29 11.9999C28.4477 11.9999 28 11.5522 28 10.9999C28 10.4476 28.4477 9.99988 29 9.99988L31 9.99988L31 9.38107C31 7.60587 29.6569 6.16678 28 6.16678C26.3431 6.16678 25 7.60587 25 9.38107L25 21.0225C25.5858 21.0829 26.2524 21.2558 26.9824 21.4451Z"
      />
    </svg>
  ),
  orb: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24px"
      height="24px"
      viewBox="0 0 512 512"
    >
      <path
        d="M256,512C114.625,512,0,397.375,0,256S114.625,0,256,0,512,114.625,512,256,397.375,512,256,512Zm0-448C149.969,64,64,149.969,64,256s85.969,192,192,192,192-85.969,192-192S362.031,64,256,64Zm0,320A128,128,0,1,1,384,256,128.006,128.006,0,0,1,256,384Z"
        fillRule="evenodd"
      />
    </svg>
  ),
  writing: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24px"
      height="24px"
      viewBox="0 0 470 470"
    >
      <path d="M469.522,300.565l-49.5-189.396c-1.847-7.669-8.708-13.075-16.597-13.075c-0.402,0-2.9,0.004-7.01,0.089   c-2.816-3.191-6.919-5.157-11.401-5.157c-1.579,0-39.106,0.067-77.322,5.959c-23.182,3.571-41.898,8.604-55.634,14.955   c-7.079,3.272-12.66,6.842-17.059,10.535c-4.399-3.693-9.98-7.263-17.059-10.535c-13.734-6.352-32.452-11.384-55.633-14.955   c-38.215-5.892-75.744-5.959-77.323-5.959c-4.482,0-8.585,1.966-11.401,5.157c-4.111-0.085-6.607-0.089-7.01-0.089   c-7.889,0-14.75,5.406-16.596,13.075l-49.5,189.396c-2.188,9.092,3.343,18.249,12.407,20.544l217.926,55.165l0.015,0.004   c0.008,0.002,0.017,0.004,0.025,0.006c0.404,0.102,2.593,0.689,4.149,0.689s3.746-0.59,4.15-0.691   c0.007-0.002,0.017-0.002,0.023-0.004c0.005-0.002,0.01-0.002,0.015-0.004l217.927-55.165   C466.179,318.814,471.71,309.657,469.522,300.565z M312.04,129.081c23.482-3.637,47.282-4.932,61.057-5.393l37.708,156.632   l-160.601,40.653v-166.5C250.204,149.004,263.127,136.659,312.04,129.081z M219.795,154.473v166.501L59.194,280.319l37.708-156.634   c13.703,0.455,37.334,1.739,60.773,5.351C206.812,136.61,219.795,148.985,219.795,154.473z" />
    </svg>
  ),
  box: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24px"
      width="24px"
      viewBox="0 0 512 512"
    >
      <path d="M455.638,145.402H150.231L323.407,66.94c6.5,3.924,14.737,4.771,22.232,1.499   c12.285-5.335,17.903-19.631,12.559-31.916c-5.354-12.276-19.64-17.902-31.925-12.558c-7.496,3.272-12.487,9.869-14.049,17.303   L63.047,145.402h-6.676C25.232,145.402,0,170.642,0,201.772v231.92c0,31.122,25.232,56.362,56.371,56.362h399.268   c31.131,0,56.362-25.24,56.362-56.362v-231.92C512,170.642,486.77,145.402,455.638,145.402z M89.865,380.814   c-9.164,5.3-20.902,2.161-26.202-7.012c-5.3-9.18-2.143-20.909,7.029-26.209c9.172-5.291,20.901-2.161,26.201,7.028   C102.186,363.793,99.046,375.523,89.865,380.814z M96.894,294.68c-5.3,9.172-17.029,12.32-26.201,7.02   c-9.172-5.3-12.32-17.03-7.029-26.201c5.309-9.18,17.038-12.32,26.21-7.02C99.046,273.77,102.194,285.499,96.894,294.68z    M148.802,422.951c-10.592,0-19.182-8.589-19.182-19.181c0-10.592,8.59-19.19,19.182-19.19c10.591,0,19.181,8.598,19.181,19.19   C167.983,414.362,159.393,422.951,148.802,422.951z M148.802,343.837c-10.592,0-19.182-8.599-19.182-19.19   c0-10.592,8.59-19.181,19.182-19.181c10.591,0,19.181,8.589,19.181,19.181C167.983,335.238,159.393,343.837,148.802,343.837z    M148.802,264.714c-10.592,0-19.182-8.59-19.182-19.182c0-10.6,8.59-19.181,19.182-19.181c10.591,0,19.181,8.581,19.181,19.181   C167.983,256.124,159.393,264.714,148.802,264.714z M233.931,373.803c-5.291,9.172-17.029,12.312-26.2,7.012   c-9.181-5.291-12.32-17.021-7.02-26.192c5.291-9.19,17.03-12.32,26.201-7.028C236.083,352.894,239.231,364.622,233.931,373.803z    M226.911,301.7c-9.172,5.3-20.91,2.151-26.201-7.02c-5.3-9.18-2.16-20.909,7.02-26.209c9.171-5.292,20.9-2.152,26.2,7.028   C239.231,284.67,236.083,296.4,226.911,301.7z M462.297,419.22H293.282v-23.202h169.014V419.22z M462.297,376.969H293.282v-23.202   h169.014V376.969z M462.297,334.718H293.282v-23.202h169.014V334.718z M462.297,275.066H293.282v-53.848h169.014V275.066z" />
    </svg>
  ),
  uv: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24px"
      height="24px"
      viewBox="0 0 515.458 515.458"
    >
      <path d="M298.794,386.711c27.805,9.522,52.357,15.587,87.633,26.427C372.875,584.374,210.952,516.371,298.794,386.711z    M443.366,229.409c-1.826-51.415-10.882-118.86-83.017-108.292c-33.815,8.825-58.8,45.962-70.551,110.035   c-6.454,35.229-2.701,84.678,4.912,114.32c6.951,20.889,4.587,19.605,12.058,23.572c28.916,6.514,57.542,13.725,86.693,21.078   C423.075,369.209,447.397,258.182,443.366,229.409z M220.752,225.463c7.607-29.646,11.36-79.095,4.909-114.32   C213.919,47.067,188.931,9.924,155.11,1.105C82.975-9.463,73.919,57.981,72.093,109.399   c-4.031,28.768,20.294,139.802,49.911,160.711c29.149-7.353,57.771-14.558,86.696-21.078   C216.162,245.069,213.798,246.352,220.752,225.463z M129.029,293.132c13.547,171.234,175.47,103.231,87.63-26.427   C188.854,276.228,164.304,282.292,129.029,293.132z" />
    </svg>
  ),
} satisfies { [id in EvidenceID]: ReactNode };

function getEvidenceIcon(
  id: EvidenceID,
  evidences: EvidenceStateMap,
): ReactNode {
  const color =
    evidences[id] == EvidenceState.ABSENT
      ? "fill-red-400"
      : evidences[id] == EvidenceState.PRESENT
        ? "fill-emerald-400"
        : "fill-current";

  return (
    <div className={color} aria-label={EvidenceLabels[id]}>
      {evidenceIcons[id]}
    </div>
  );
}

export interface Props {
  ghost: Ghost;
}

export default function Ghost({ ghost }: Props) {
  const { evidences } = useContext(EvidenceContext);

  return (
    <Card className={`max-w-[384px] grow ${styles.card}`}>
      <div className="flex flex-col items-center gap-4">
        <div className="text-center text-xl font-bold">{ghost.name}</div>
        <div className="flex flex-row gap-4">
          {ghost.evidences
            .filter((evidence) => evidence != ghost.guaranteed)
            .map((id) => (
              <div key={id}>{getEvidenceIcon(id, evidences.value)}</div>
            ))}
        </div>
        {ghost.fake ? (
          <div className="flex flex-row items-center gap-2">
            {getEvidenceIcon(ghost.fake, evidences.value)}
            <small>(fake)</small>
          </div>
        ) : (
          <></>
        )}
        {ghost.guaranteed ? (
          <div className="flex flex-row items-center gap-2">
            {getEvidenceIcon(ghost.guaranteed, evidences.value)}
            <small>(guaranteed)</small>
          </div>
        ) : (
          <></>
        )}
      </div>
    </Card>
  );
}
